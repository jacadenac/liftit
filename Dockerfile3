FROM golang:onbuild
MAINTAINER jacadenac@unal.edu.co
EXPOSE 8080

# -------------------------------------------------------------------

FROM golang:1.8
RUN mkdir -p /go/src/app
WORKDIR /go/src/app
COPY . .
# RUN go install -v
# this will ideally be built by the ONBUILD below ;)
CMD ["go-wrapper", "run", "app"]
ONBUILD COPY . /go/src/app
ONBUILD RUN go-wrapper download
ONBUILD RUN go-wrapper install
RUN go get github.com/gorilla/mux

MAINTAINER jacadenac@unal.edu.co
EXPOSE 8080

# -------------------------------------------------------------------



FROM golang:latest

# /usr/local/bin/go-wrapper: 89: exec: app: not found
#ENV GOPATH /go
#ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH
#RUN mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
#WORKDIR $GOPATH
#COPY go-wrapper /usr/local/bin/

# Copy the local package files to the containerâ€™s workspace.
ADD . /go/src/github.com/jacadenac/liftit

# Install the  dependencies
RUN go get github.com/gorilla/mux
#RUN go get gopkg.in/pg.v4
#RUN go get github.com/julienschmidt/httprouter
#RUN go get github.com/justinas/alice
#RUN go get github.com/satori/go.uuid

# Install api binary globally within container
RUN go install github.com/jacadenac/liftit/config
RUN go install github.com/jacadenac/liftit/models
RUN go install github.com/jacadenac/liftit/services
#RUN go install github.com/jacadenac/liftit
#RUN go install github.com/jacadenac/liftit

# Set binary as entrypoint
ENTRYPOINT /go/bin/jacadenac/liftit
#ENTRYPOINT /go/src/github.com/jacadenac/liftit


MAINTAINER jacadenac@unal.edu.co
EXPOSE 8080
